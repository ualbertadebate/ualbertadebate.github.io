{
	# trigger on push and on manual runs from Actions tab
	on: ["push", "workflow_dispatch"],

	# allow deployment to GitHub Pages
	permissions: {contents: "read", pages: "write", id-token: "write"},

	# allow only one concurrent deployment,
	# skipping runs queued between the run in-progress and latest queued
	# but do not cancel in-progress runs
	concurrency: {group: "pages", cancel-in-progress: false},

	jobs: {
		build: {
			runs-on: "ubuntu-latest",
			defaults: {run: {shell: "sh"}},
			steps: [
				{uses: "actions/checkout@v4"},
				{uses: "actions/configure-pages@v5"},
				{run: "! find content/ | grep -Evx '(.*/)?[0-9a-z_][Ã©0-9a-z_.-]*/?' || (>&2 printf 'invalid files names found!\\n'; exit 1)"},
				{run: "find content/ -type f -name \\*.html -exec sh -c 'for html do md=${html%.html}.md; ! [ -f $md ] || find $md tmpl.html .github/workflows/publish.yml -newer $html | grep -q . && (>&2 printf \"rm %s\\\\n\" $html; rm $html); done' _ {} +"},
				{
					uses: "docker://pandoc/core:3.5",
					with: {
						entrypoint: "find",
						args: "content/ -type f -name *.md -exec sh -c \"for md do html=${md%.md}.html; [ -f $html ] || (>&2 printf 'building %s...\\n' $html; pandoc --template=tmpl.html --email-obfuscation=references --section-divs --wrap=preserve --output=$html $md || >&2 printf 'pandoc failed to build %s!\\n' $html); done\" _ {} +",
					},
				},
				{
					uses: "actions/upload-pages-artifact@v3",
					with: {path: "content/"},
				},
			],
		},
		deploy: {
			environment: {
				name: "github-pages",
				url: "${{ steps.deployment.outputs.page_url }}",
			},
			runs-on: "ubuntu-latest",
			needs: "build",
			steps: [
				{uses: "actions/deploy-pages@v4"},
			],
		},
	},
}
